{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\muril\\\\omnistack\\\\frontend\\\\src\\\\pages\\\\Feed.js\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport io from 'socket.io-client';\nimport './Feed.css';\nimport more from \"../assets/more.svg\";\nimport like from \"../assets/like.svg\";\nimport comment from \"../assets/comment.svg\";\nimport send from \"../assets/send.svg\";\n\nclass Feed extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      feed: []\n    };\n\n    this.handleLike = id => {\n      api.post(\"/posts/\".concat(id, \"/like\"));\n    };\n  }\n\n  async componentDidMount() {\n    this.registerToSocket();\n    const response = await api.get('posts'); //o setState serve para mudar o estado e fazer o render da página novamente\n\n    this.setState({\n      feed: response.data\n    });\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      id: \"post-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.state.feed.map(post => React.createElement(\"article\", {\n      key: post._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, post.author), React.createElement(\"span\", {\n      className: \"place\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, post.place)), React.createElement(\"img\", {\n      src: more,\n      height: \"16\",\n      width: \"16\",\n      alt: \"Mais\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      height: \"580\",\n      width: \"400\",\n      src: \"http://localhost:3334/files/\".concat(post.image),\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleLike(post._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: like,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      src: comment,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: send,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, post.likes, \" curtidas\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, post.description, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, post.hashtags))))));\n  }\n\n}\n\nexport default Feed;","map":{"version":3,"sources":["C:\\Users\\muril\\omnistack\\frontend\\src\\pages\\Feed.js"],"names":["React","Component","api","io","Feed","state","feed","handleLike","id","post","componentDidMount","registerToSocket","response","get","setState","data","render","map","_id","author","place","more","image","like","comment","send","likes","description","hashtags"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport api from '../services/api';\r\nimport io from 'socket.io-client';\r\n\r\nimport './Feed.css';\r\n\r\nimport more from '../assets/more.svg';\r\nimport like from '../assets/like.svg';\r\nimport comment from '../assets/comment.svg';\r\nimport send from '../assets/send.svg';\r\n\r\nclass Feed extends Component {\r\n\r\n    state = {\r\n        feed: [],\r\n    };\r\n\r\n    async componentDidMount() {\r\n        this.registerToSocket();\r\n        const response = await api.get('posts');\r\n\r\n        //o setState serve para mudar o estado e fazer o render da página novamente\r\n        this.setState({ feed: response.data });\r\n    }\r\n\r\n    handleLike = id => {\r\n        api.post(`/posts/${id}/like`);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"post-list\">\r\n                { this.state.feed.map(post => (\r\n                    <article key={post._id}>\r\n                    <header>\r\n                        <div className=\"user-info\">\r\n                            <span>{post.author}</span>\r\n                            <span className=\"place\">{post.place}</span>\r\n                        </div>\r\n                        \r\n                        <img src={more} height=\"16\" width=\"16\" alt=\"Mais\" />\r\n                    </header>\r\n\r\n                    <img height=\"580\" width=\"400\" src={`http://localhost:3334/files/${post.image}`} alt=\"\"/>\r\n\r\n                    <footer>\r\n                        <div className=\"actions\">\r\n                            \r\n                            <button type=\"button\" onClick={() => this.handleLike(post._id)}>\r\n                                <img src={like} alt=\"\" />\r\n                            </button>\r\n                            <img src={comment} alt=\"\" />\r\n                            <img src={send} alt=\"\" />\r\n                        </div>\r\n\r\n                        <strong>{post.likes} curtidas</strong>\r\n\r\n                        <p>\r\n                            {post.description}\r\n                            <span>{post.hashtags}</span>\r\n                        </p>                    \r\n                    </footer>\r\n                </article>\r\n                )) }\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Feed;"]},"metadata":{},"sourceType":"module"}